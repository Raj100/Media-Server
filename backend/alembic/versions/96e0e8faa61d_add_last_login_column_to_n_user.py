"""Add last_login column to n_user

Revision ID: 96e0e8faa61d
Revises: 
Create Date: 2025-09-06 15:50:06.265223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96e0e8faa61d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE auth_user CASCADE;")

    op.add_column('n_user', sa.Column('avatar', sa.String(), nullable=True))
    op.add_column('n_user', sa.Column('google_id', sa.String(), nullable=True))
    op.add_column('n_user', sa.Column('last_login', sa.DateTime(), nullable=True))
    op.alter_column('n_user', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('n_user', 'password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('n_user', 'last_login')
    op.drop_column('n_user', 'google_id')
    op.drop_column('n_user', 'avatar')
    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('django_migrations_pkey'))
    )
    op.create_table('media_items',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('movie', 'music', 'video', name='mediatype'), autoincrement=False, nullable=False),
    sa.Column('thumbnail', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('poster', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('format', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('quality', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('genre', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('director', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cast', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('trailer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('artist', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('album', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('track_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lyrics', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('media_items_pkey'))
    )
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name=op.f('django_session_pkey'))
    )
    op.create_index(op.f('django_session_session_key_c0390e0f_like'), 'django_session', ['session_key'], unique=False)
    op.create_index(op.f('django_session_expire_date_a5c62663'), 'django_session', ['expire_date'], unique=False)
    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name=op.f('django_admin_log_action_flag_check')),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name=op.f('django_admin_log_content_type_id_c4bce8eb_fk_django_co'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name=op.f('django_admin_log_user_id_c564eba6_fk_auth_user_id'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('django_admin_log_pkey'))
    )
    op.create_index(op.f('django_admin_log_user_id_c564eba6'), 'django_admin_log', ['user_id'], unique=False)
    op.create_index(op.f('django_admin_log_content_type_id_c4bce8eb'), 'django_admin_log', ['content_type_id'], unique=False)
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('auth_permission_content_type_id_2f476e4b'), 'auth_permission', ['content_type_id'], unique=False)
    op.create_table('auth_user_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name=op.f('auth_user_groups_group_id_97559544_fk_auth_group_id'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name=op.f('auth_user_groups_user_id_6a12ed8b_fk_auth_user_id'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_groups_pkey')),
    sa.UniqueConstraint('user_id', 'group_id', name=op.f('auth_user_groups_user_id_group_id_94350c0c_uniq'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_user_groups_user_id_6a12ed8b'), 'auth_user_groups', ['user_id'], unique=False)
    op.create_index(op.f('auth_user_groups_group_id_97559544'), 'auth_user_groups', ['group_id'], unique=False)
    op.create_table('service_status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uptime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_check', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('service_status_pkey'))
    )
    op.create_index(op.f('ix_service_status_id'), 'service_status', ['id'], unique=False)
    op.create_table('new_york_addresses',
    sa.Column('city', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('latitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True),
    sa.Column('elevation', sa.NUMERIC(), autoincrement=False, nullable=True)
    )
    op.create_table('server_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('server_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uptime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_movies', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_music', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_videos', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_size', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('available_space', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('active_downloads', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cpu_usage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('memory_usage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('disk_usage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('network_speed', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('server_stats_pkey'))
    )
    op.create_index(op.f('ix_server_stats_id'), 'server_stats', ['id'], unique=False)
    op.create_table('activity_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('activity_logs_pkey'))
    )
    op.create_index(op.f('ix_activity_logs_id'), 'activity_logs', ['id'], unique=False)
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name=op.f('auth_group_permissions_group_id_b120cbf9_fk_auth_group_id'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name=op.f('auth_group_permissio_permission_id_84c5c92e_fk_auth_perm'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_group_permissions_pkey')),
    sa.UniqueConstraint('group_id', 'permission_id', name=op.f('auth_group_permissions_group_id_permission_id_0cd325b0_uniq'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_group_permissions_permission_id_84c5c92e'), 'auth_group_permissions', ['permission_id'], unique=False)
    op.create_index(op.f('auth_group_permissions_group_id_b120cbf9'), 'auth_group_permissions', ['group_id'], unique=False)
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_group_pkey')),
    sa.UniqueConstraint('name', name=op.f('auth_group_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_group_name_a6ea08ec_like'), 'auth_group', ['name'], unique=False)
    op.create_table('auth_user',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_user_pkey'),
    sa.UniqueConstraint('username', name='auth_user_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('auth_user_username_6821ab7c_like'), 'auth_user', ['username'], unique=False)
    op.create_table('auth_user_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name=op.f('auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name=op.f('auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_user_permissions_pkey')),
    sa.UniqueConstraint('user_id', 'permission_id', name=op.f('auth_user_user_permissions_user_id_permission_id_14a6b632_uniq'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_user_user_permissions_user_id_a95ead1b'), 'auth_user_user_permissions', ['user_id'], unique=False)
    op.create_index(op.f('auth_user_user_permissions_permission_id_1fbb5f2c'), 'auth_user_user_permissions', ['permission_id'], unique=False)
    op.create_table('system_health',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cpu', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('memory', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('disk', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('network', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('system_health_pkey'))
    )
    op.create_index(op.f('ix_system_health_id'), 'system_health', ['id'], unique=False)
    # ### end Alembic commands ###
